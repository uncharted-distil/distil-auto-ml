{
    "id": "e5929f23-0cdb-45e1-94b5-20924b91072a",
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "created": "2020-10-09T15:19:15.049584Z",
    "inputs": [
        {
            "name": "inputs"
        }
    ],
    "outputs": [
        {
            "data": "steps.2.produce",
            "name": "output"
        }
    ],
    "steps": [
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                "version": "0.2.0",
                "python_path": "d3m.primitives.data_transformation.denormalize.Common",
                "name": "Denormalize datasets"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "inputs.0"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "name": "Extract a DataFrame from a Dataset"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.0.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "d921be1e-b158-4ab7-abb3-cb1b17f42639",
                "version": "0.1.0",
                "python_path": "d3m.primitives.object_detection.retina_net.ObjectDetectionRN",
                "name": "retina_net"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.1.produce"
                },
                "outputs": {
                    "type": "CONTAINER",
                    "data": "steps.1.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "n_epochs": {
                    "type": "VALUE",
                    "data": 30
                },
                "n_steps": {
                    "type": "VALUE",
                    "data": 50
                },
                "batch_size": {
                    "type": "VALUE",
                    "data": 8
                }
            }
        }
    ],
    "digest": "7d53e3d06e687e0d00039a259b7ad39a49be2738b708f6c187513469661dc868"
}
