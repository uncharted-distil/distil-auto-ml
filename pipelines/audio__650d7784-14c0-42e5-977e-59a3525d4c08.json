{
    "id": "650d7784-14c0-42e5-977e-59a3525d4c08",
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "created": "2019-11-26T02:03:44.170853Z",
    "inputs": [
        {
            "name": "inputs"
        }
    ],
    "outputs": [
        {
            "data": "steps.5.produce",
            "name": "output"
        }
    ],
    "steps": [
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "f2a0cf71-0f61-41a7-a0ad-b907083ae56c",
                "version": "0.1.1",
                "python_path": "d3m.primitives.data_preprocessing.audio_loader.DistilAudioDatasetLoader",
                "name": "Load audio collection from dataset into a single dataframe"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "inputs.0"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                },
                {
                    "id": "produce_collection"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                "version": "0.5.0",
                "python_path": "d3m.primitives.data_transformation.column_parser.Common",
                "name": "Parses strings into their types"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.0.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "parse_semantic_types": {
                    "type": "VALUE",
                    "data": [
                        "http://schema.org/Boolean",
                        "http://schema.org/Integer",
                        "http://schema.org/Float",
                        "https://metadata.datadrivendiscovery.org/types/FloatVector"
                    ]
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
                "name": "Extracts columns by semantic type"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.1.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "semantic_types": {
                    "type": "VALUE",
                    "data": [
                        "https://metadata.datadrivendiscovery.org/types/Target",
                        "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                    ]
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "f2f149c8-a984-4f5b-8a9b-2f13ee0cf16d",
                "version": "0.1.1",
                "python_path": "d3m.primitives.feature_extraction.audio_transfer.DistilAudioTransfer",
                "name": "Audio Transfer"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.0.produce_collection"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "e0ad06ce-b484-46b0-a478-c567e1ea7e02",
                "version": "0.2.0",
                "python_path": "d3m.primitives.learner.random_forest.DistilEnsembleForest",
                "name": "EnsembleForest"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce"
                },
                "outputs": {
                    "type": "CONTAINER",
                    "data": "steps.2.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "metric": {
                    "type": "VALUE",
                    "data": "accuracy"
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.Common",
                "name": "Construct pipeline predictions output"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.4.produce"
                },
                "reference": {
                    "type": "CONTAINER",
                    "data": "steps.1.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        }
    ],
    "digest": "db9433a3508e6ac8aa95dc2ae5ef1c4ae2ea8b0f0f74a30ae31808059886b02a"
}
