{
    "id": "b6862815-d582-4bbc-a61c-6c490b9d3531",
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "created": "2020-10-09T15:19:09.543844Z",
    "inputs": [
        {
            "name": "inputs"
        }
    ],
    "outputs": [
        {
            "data": "steps.7.produce",
            "name": "output"
        }
    ],
    "steps": [
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "name": "Extract a DataFrame from a Dataset"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "inputs.0"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "e193afa1-b45e-4d29-918f-5bb1fa3b88a7",
                "version": "0.2.0",
                "python_path": "d3m.primitives.schema_discovery.profiler.Common",
                "name": "Determine missing semantic types for columns automatically"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.0.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "73d79f46-1bea-4858-a061-a2d1cfc5f122",
                "version": "0.1.0",
                "python_path": "d3m.primitives.data_transformation.datetime_field_compose.Common",
                "name": "Datetime Field Compose"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.1.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "columns": {
                    "type": "VALUE",
                    "data": [
                        4,
                        5,
                        22
                    ]
                },
                "join_char": {
                    "type": "VALUE",
                    "data": "-"
                },
                "output_name": {
                    "type": "VALUE",
                    "data": "timestamp"
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "487e5a58-19e9-432c-ac61-fe05c024e42c",
                "version": "0.2.0",
                "python_path": "d3m.primitives.data_preprocessing.datetime_range_filter.Common",
                "name": "Datetime range filter"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.2.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "column": {
                    "type": "VALUE",
                    "data": 3
                },
                "min": {
                    "type": "VALUE",
                    "data": {
                        "case": "datetime",
                        "value": {
                            "encoding": "pickle",
                            "value": "gANjZGF0ZXRpbWUKZGF0ZXRpbWUKcQBDCgfiAQEAAAAAAABxAYVxAlJxAy4="
                        }
                    }
                },
                "max": {
                    "type": "VALUE",
                    "data": {
                        "case": "datetime",
                        "value": {
                            "encoding": "pickle",
                            "value": "gANjZGF0ZXRpbWUKZGF0ZXRpbWUKcQBDCgfiDAUAAAAAAABxAYVxAlJxAy4="
                        }
                    }
                },
                "strict": {
                    "type": "VALUE",
                    "data": true
                },
                "inclusive": {
                    "type": "VALUE",
                    "data": true
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "a6b27300-4625-41a9-9e91-b4338bfc219b",
                "version": "0.1.0",
                "python_path": "d3m.primitives.data_preprocessing.term_filter.Common",
                "name": "Term list dataset filter"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "column": {
                    "type": "VALUE",
                    "data": 14
                },
                "inclusive": {
                    "type": "VALUE",
                    "data": true
                },
                "terms": {
                    "type": "VALUE",
                    "data": [
                        "Middle East"
                    ]
                },
                "match_whole": {
                    "type": "VALUE",
                    "data": true
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "cf73bb3d-170b-4ba9-9ead-3dd4b4524b61",
                "version": "0.1.0",
                "python_path": "d3m.primitives.data_preprocessing.regex_filter.Common",
                "name": "Regex dataset filter"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.4.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "column": {
                    "type": "VALUE",
                    "data": 25
                },
                "inclusive": {
                    "type": "VALUE",
                    "data": true
                },
                "regex": {
                    "type": "VALUE",
                    "data": "Syria"
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "8c246c78-3082-4ec9-844e-5c98fcc76f9d",
                "version": "0.1.0",
                "python_path": "d3m.primitives.data_preprocessing.numeric_range_filter.Common",
                "name": "Numeric range filter"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.5.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "column": {
                    "type": "VALUE",
                    "data": 22
                },
                "min": {
                    "type": "VALUE",
                    "data": {
                        "case": "float",
                        "value": 0
                    }
                },
                "max": {
                    "type": "VALUE",
                    "data": {
                        "case": "float",
                        "value": 100
                    }
                },
                "strict": {
                    "type": "VALUE",
                    "data": true
                },
                "inclusive": {
                    "type": "VALUE",
                    "data": true
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                "version": "0.6.0",
                "python_path": "d3m.primitives.data_transformation.column_parser.Common",
                "name": "Parses strings into their types"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.6.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "parse_semantic_types": {
                    "type": "VALUE",
                    "data": [
                        "http://schema.org/Integer",
                        "http://schema.org/Float",
                        "https://metadata.datadrivendiscovery.org/types/FloatVector"
                    ]
                }
            }
        }
    ],
    "digest": "03beaec6464dc50c7c8785a4a5e74288a608fccbe3bfa6a5f51f00335168f6e9"
}
